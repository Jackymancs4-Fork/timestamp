@import "../../node_modules/normalize.css/normalize";

// -----------------------------------------------------------------------------
// Get values from a nested map.
// -----------------------------------------------------------------------------
@function _($keys...) {
    $track: "";
    $map: $colors;

    @each $key in $keys {
        @if not map-has-key($map, $key) {
            @error "No \"#{$key}\" found in \"$colors#{$track}\". Property omitted.";
        }

        $track: $track + "." + $key;
        $map: map-get($map, $key);
    }

    @return $map;
}

// -----------------------------------------------------------------------------
// Project variables.
// -----------------------------------------------------------------------------
$colors: (
    "bright": (
        "bright-navy-blue": #2d7dd2,
        "ghost-white": #fafafa,
        "outer-space": #474647,
        "sheen-green": #97cc04,
        "desire": #ea3546
    ),
    "dark": (
        "black": #000
    )
);

$brand-primary: _("bright", "bright-navy-blue");
$brand-success: _("bright", "sheen-green");
$brand-fail: _("bright", "desire");
$brand-info: "";

$primary-background: _("bright", "ghost-white");
$primary-link: $brand-primary;
$primary-text: _("bright", "outer-space");
$silent-text: lighten(_("bright", "outer-space"), 35%);
$highlight-fg: $primary-background;
$input-bg: _("bright", "ghost-white");

$font-smaller: 0.75rem;

// -----------------------------------------------------------------------------
// Styles.
// -----------------------------------------------------------------------------
// .dark-mode {
//     $primary-background: _("dark", "black") !global;
// }

:root {
    background-color: $primary-background;
    box-sizing: border-box;
    font-family: system, -apple-system, BlinkMacSystemFont, Helvetica Neue, Lucida Grande;
    font-size: 16px;
    font-weight: lighter;
    text-transform: uppercase;
    transition-duration: 200ms;
    transition-property: none;
}

*,
*::before,
*::after {
    border-color: inherit;
    box-sizing: inherit;
    color: $primary-text;
    transition-duration: inherit;
    transition-property: inherit;
}

abbr[title] {
    color: $silent-text;
    text-decoration: none;
}

select {
    position: absolute;
    visibility: hidden;
}

a {
    color: $primary-link;
    font-size: $font-smaller;
    position: relative;
    text-decoration: none;
    text-transform: none;

    &::before {
        color: inherit;
        background-color: currentColor;
        bottom: -1px;
        content: "";
        height: 1px;
        left: 0;
        position: absolute;
        transition-property: transform, opacity;
        width: 100%;
    }

    &:hover::before {
        transform: translateY(2px);
        opacity: 0;
    }
}

.calendar-container {
    display: inline-block;
    padding: 0.5rem 0.75rem;
    position: relative;
}

.pika-single {
    border: 0;
    display: inline-block;
}

.pika-title {
    display: none;
}

.pika-table td {
    padding: 0.25rem;
}

.pika-table th {
    font-size: $font-smaller;
    font-weight: inherit;
    padding-bottom: 0.375rem;
}

.pika-day {
    background: transparent;
    border: 0;
    color: currentColor;
    display: block;
    padding: 0.5rem;
    width: 100%;
}

.is-today .pika-day {
    background-color: $brand-primary;
    // box-shadow: 0 0 0 0.125rem darken($brand-primary, 2.5%);
    color: $highlight-fg;
    border-radius: 50%;
}

.calendar-title {
    align-items: center;
    display: flex;
    justify-content: space-between;
    margin-bottom: 2rem;
    padding: 0.5rem;
}

.calendar-month {
    order: 4;
    text-align: right;
    width: 50%;
}
.calendar-year {
    font-weight: normal;
    order: 5;
    text-align: right;
    width: 15%;
}

.calendar-prev,
.calendar-next {
    background: transparent;
    border: 0;
    cursor: pointer;
    font-size: 0;
    outline: 0;
    padding: inherit;

    &::before {
        $arrow-size: 0.5rem;
        $line-size: 1px;

        border-color: currentColor;
        border-style: solid;
        border-width: $line-size $line-size 0 0;
        content: "";
        display: block;
        height: $arrow-size;
        width: $arrow-size;
    }
}

.calendar-prev {
    order: 1;

    &::before {
        transform: rotate(-135deg);
    }
}

.calendar-next {
    order: 3;

    &::before {
        transform: rotate(45deg);
    }
}

.calendar-today {
    background: transparent;
    border: 0;
    cursor: pointer;
    order: 2;
    outline: 0;
    padding: inherit;

    &::before {
        $dot-size: 0.5rem;

        background: currentColor;
        border-radius: 50%;
        content: "";
        display: block;
        height: $dot-size;
        width: $dot-size;
    }
}

// -----------------------------------------------------------------------------

.preferences-container {
    display: inline-block;
    padding: 1rem;
    width: 300px;
}

.preferences-field {
    $toggle-size: 7rem;
    $input-padding: 0.75rem;

    border: 0;
    color: $brand-primary;
    display: block;
    margin: 0;
    padding: 0;

    & + & {
        margin-top: 1.5rem;
    }

    > .legend {
        background-color: $brand-primary;
        color: $highlight-fg;
        font-size: $font-smaller;
        padding: 0.25rem $input-padding;
    }

    > .input {
        background-color: $input-bg;
        border: 0;
        box-shadow: inset 0 0 0 2px $brand-primary;
        color: inherit;
        margin: 0 0 0.5rem;
        outline: 0;
        padding: $input-padding;
        width: 100%;

        &::-webkit-input-placeholder {
            color: $silent-text;
            opacity: 1;
        }
    }

    > .label {
        background-color: $input-bg;
        box-shadow: inset 0 0 0 2px currentColor;
        cursor: pointer;
        color: $brand-fail;
        display: block;
        padding: $input-padding;
        position: relative;
        text-transform: none;
        transition-property: box-shadow, color;

        &::before,
        &::after {
            content: "";
            bottom: 2px;
            position: absolute;
            right: 2px;
            top: 2px;
        }

        &::before {
            background-image: linear-gradient(to right, $brand-primary 50%, $brand-fail 50%);
            color: $highlight-fg;
            content: "YES NO";
            padding: inherit;
            text-align: center;
            width: $toggle-size;
            word-spacing: $input-padding * 2;
        }

        &::after {
            background-color: $input-bg;
            transform: translateX($toggle-size / -2);
            transition-property: transform;
            width: $toggle-size / 2;
        }
    }

    > .checkbox {
        position: absolute;
        visibility: hidden;

        &:checked + .label {
            color: $brand-primary;

            &::after {
                transform: translateX(0);
            }
        }
    }
}
